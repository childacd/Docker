import re

def parse_jil_file(file_path):
    job_definitions = {}
    box_definitions = {}
    current_job = None
    current_box = None

    with open(file_path, 'r') as file:
        for line in file:
            line = line.strip()
            if line.startswith('insert_job:'):
                job_name = re.search(r'insert_job:\s+(\S+)', line).group(1)
                current_job = {'job_name': job_name, 'attributes': []}
                job_definitions[job_name] = current_job
                current_box = None
            elif line.startswith('insert_box:'):
                box_name = re.search(r'insert_box:\s+(\S+)', line).group(1)
                current_box = {'box_name': box_name, 'jobs': []}
                box_definitions[box_name] = current_box
            elif current_job:
                current_job['attributes'].append(line)
            elif current_box:
                current_box['jobs'].append(line)

    return job_definitions, box_definitions

def compare_job_structures(job_structure1, job_structure2):
    job_names1 = set(job_structure1.keys())
    job_names2 = set(job_structure2.keys())

    differences_found = False
    for job_name in job_names1:
        if job_name in job_names2:
            attributes1 = set(job_structure1[job_name]['attributes'])
            attributes2 = set(job_structure2[job_name]['attributes'])

            if attributes1 != attributes2:
                differences_found = True
                print(f"Job {job_name} has different attributes:")
                print("In first set:")
                print(attributes1)
                print("In second set:")
                print(attributes2)
        else:
            differences_found = True
            print(f"Job {job_name} is present in first set but not in second set.")

    for job_name in job_names2:
        if job_name not in job_names1:
            differences_found = True
            print(f"Job {job_name} is present in second set but not in first set.")

    if not differences_found:
        print("Job structures are identical.")

def compare_box_structures(box_structure1, box_structure2):
    box_names1 = set(box_structure1.keys())
    box_names2 = set(box_structure2.keys())

    differences_found = False
    for box_name in box_names1:
        if box_name in box_names2:
            jobs1 = set(box_structure1[box_name]['jobs'])
            jobs2 = set(box_structure2[box_name]['jobs'])

            if jobs1 != jobs2:
                differences_found = True
                print(f"Box {box_name} has different job composition:")
                print("In first set:")
                print(jobs1)
                print("In second set:")
                print(jobs2)
        else:
            differences_found = True
            print(f"Box {box_name} is present in first set but not in second set.")

    for box_name in box_names2:
        if box_name not in box_names1:
            differences_found = True
            print(f"Box {box_name} is present in second set but not in first set.")

    if not differences_found:
        print("Box structures are identical.")

if __name__ == "__main__":
    jil_file1 = "/v_1/all.JIL"
    jil_file2 = "/v_2/a_1.jil"

    job_structure1, box_structure1 = parse_jil_file(jil_file1)
    job_structure2, box_structure2 = parse_jil_file(jil_file2)

    compare_job_structures(job_structure1, job_structure2)
    compare_box_structures(box_structure1, box_structure2)
