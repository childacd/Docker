是的，你说的完全可以做到。你可以通过定义一个 Shell 函数 来实现 kexec <pod_name> 的行为，并把这个函数写到你的 shell 启动文件（比如 .bashrc 或 .zshrc）里，让它在每次打开终端时自动加载。

示例：定义一个 kexec 函数

假设你用的是 kubectl exec -it <pod_name> -- /bin/bash 来进入 pod：

kexec() {
    if [ -z "$1" ]; then
        echo "Usage: kexec <pod_name>"
        return 1
    fi
    kubectl exec -it "$1" -- /bin/bash
}

放在哪个文件？

取决于你用的是哪种 Shell：
	•	bash 用户：放在 ~/.bashrc
	•	zsh 用户：放在 ~/.zshrc

保存后运行下面命令让配置生效：

source ~/.bashrc     # 如果是 bash
source ~/.zshrc      # 如果是 zsh

提示功能（可选增强）

你也可以增强这个函数，比如让它自动补全 pod 名（稍微复杂一点）或者默认 namespace：

kexec() {
    pod=$(kubectl get pods --no-headers | grep "$1" | awk '{print $1}' | head -n1)
    if [ -z "$pod" ]; then
        echo "Pod not found"
        return 1
    fi
    kubectl exec -it "$pod" -- /bin/bash
}

这样你就可以输入：

kexec partial-name

它会自动匹配第一个包含这个字符串的 pod。

需要我帮你写成可以支持 namespace 或自动补全的高级版本吗？
