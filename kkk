import pandas as pd
import time


def read_excel_with_estimation(file_path, sheet_name=None, usecols=None, nrows=None, **kwargs):
    """
    带读取规模和时间估算的通用 pd.read_excel 方法。
    :param file_path: Excel 文件路径
    :param sheet_name: 要读取的工作表名称（可选）
    :param usecols: 要读取的列范围（可选）
    :param nrows: 要读取的行数（可选）
    :param kwargs: 其他传递给 pd.read_excel 的参数
    :return: DataFrame
    """
    # 打开文件获取元信息
    with pd.ExcelFile(file_path) as xls:
        sheets = xls.sheet_names
        print(f"文件包含以下工作表: {sheets}")
        if sheet_name:
            print(f"将读取工作表: {sheet_name}")
        else:
            sheet_name = sheets[0]  # 默认读取第一个工作表
            print(f"未指定工作表，将默认读取第一个: {sheet_name}")
        
        # 获取指定工作表的总行数和列数
        sheet_info = xls.parse(sheet_name, usecols=usecols, nrows=0)  # 只读取表头
        total_cols = len(sheet_info.columns)
        total_rows = xls.book[sheet_name].max_row
        print(f"工作表 {sheet_name} 总行数: {total_rows}, 总列数: {total_cols}")

    # 确定估算的行数和列数
    estimated_rows = total_rows if nrows is None else min(nrows, total_rows)
    estimated_cols = total_cols if usecols is None else len(usecols)

    # 打印友好的提示
    rows_desc = f"{estimated_rows} 行" if nrows is not None else "所有行"
    cols_desc = f"{estimated_cols} 列" if usecols is not None else "所有列"

    print(f"将读取的部分: {rows_desc} × {cols_desc}")

    # 测试读取时间
    start_time = time.time()
    df = pd.read_excel(file_path, sheet_name=sheet_name, usecols=usecols, nrows=nrows, **kwargs)
    end_time = time.time()

    print(f"实际读取时间: {end_time - start_time:.2f} 秒")
    print(f"成功读取数据: {df.shape[0]} 行, {df.shape[1]} 列")

    return df
