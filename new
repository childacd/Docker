import os
import sys
import glob

def parse_file(filename):
    """Parse the key-value pairs from the given file."""
    with open(filename, 'r') as file:
        lines = file.readlines()
        data = {}
        for line in lines:
            key, value = line.strip().split(': ')
            if key in data:
                data[key].append((value, filename))
            else:
                data[key] = [(value, filename)]
        return data

def write_file(filename, data):
    """Write the key-value pairs to the given file."""
    with open(filename, 'w') as file:
        for key, value_list in data.items():
            for value, _ in value_list:
                file.write(f"{key}: {value}\n")

def find_common_and_different_pairs(files):
    """Find common and different key-value pairs across all given files."""
    common_pairs = {}
    all_pairs = []
    
    for filename in files:
        pairs = parse_file(filename)
        all_pairs.append((filename, pairs))
        for key, value_list in pairs.items():
            values = [v[0] for v in value_list]
            if key in common_pairs:
                common_pairs[key] = list(set(common_pairs[key]) & set(values))
            else:
                common_pairs[key] = values
    
    # Find different pairs
    different_pairs = {}
    for filename, pairs in all_pairs:
        for key, value_list in pairs.items():
            for value, _ in value_list:
                if key in common_pairs and value in common_pairs[key]:
                    continue
                if key in different_pairs:
                    different_pairs[key].append((value, filename))
                else:
                    different_pairs[key] = [(value, filename)]

    return common_pairs, different_pairs, all_pairs

def remove_common_pairs_from_files(all_pairs, common_pairs):
    """Remove common key-value pairs from files."""
    for filename, pairs in all_pairs:
        updated_pairs = {k: [(v, f) for v, f in vl if v not in common_pairs.get(k, [])] 
                         for k, vl in pairs.items()}
        write_file(filename, updated_pairs)

def main():
    # Get the current script's filename
    script_filename = os.path.basename(__file__)

    # Determine suffix and files to process
    if len(sys.argv) == 2:
        suffix = sys.argv[1]
        files = glob.glob(f"*.{suffix}")
        output_filename = suffix
    else:
        files = glob.glob("*")
        output_filename = "all"
    
    # Exclude the script file itself
    files = [f for f in files if f != script_filename]
    
    if not files:
        print(f"No files found to process.")
        return

    # Find common and different key-value pairs across all files
    common_pairs, different_pairs, all_pairs = find_common_and_different_pairs(files)
    
    # Remove common pairs from the original files
    remove_common_pairs_from_files(all_pairs, common_pairs)
    
    # Write common pairs to a new file named with the suffix or "all"
    with open(output_filename, 'w') as outfile:
        outfile.write("Common key-value pairs:\n")
        for key, values in common_pairs.items():
            for value in values:
                outfile.write(f"{key}: {value}\n")

    # Print different pairs
    print("Different key-value pairs:")
    for key, value_list in different_pairs.items():
        for value, filename in value_list:
            print(f"{key}: {value} (from {filename})")

    print(f"Output written to '{output_filename}'.")

if __name__ == "__main__":
    main()
